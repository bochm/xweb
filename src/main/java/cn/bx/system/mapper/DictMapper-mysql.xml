<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"     "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.bx.system.mapper.DictMapper"> 
    <sql id="dictColumns">
    	a.id,a.value,a.name,a.type,a.type_desc,a.sort,a.remarks
    </sql>
    <!-- 启用状态 -->
    <sql id="dictOn">(select value as status from sys_dict where type='on_off' and name = '启用')</sql>
    <!-- 停用状态 -->
    <sql id="dictOff">(select value as status from sys_dict where type='on_off' and name = '停用')</sql>
	<select id="queryDictTypes" resultType="hashmap">
		select distinct type as id,type_desc as text
		from sys_dict
	</select>
	<select id="checkTypes" resultType="hashmap">
		select 1 from sys_dict where type = #{type} 
		<if test="value != null and value != ''">
		and value = #{value}
		</if>
		<if test="name != null and name != ''">
		and name = #{name}
		</if>
		<if test="o_value != null and o_value != ''">
		and value != #{o_value}
		</if>
		<if test="o_name != null and o_name != ''">
		and name != #{o_name}
		</if>
		 limit 1
	</select>
    <!-- 根据类型查询字典数据 -->
	<select id="findDictByType" resultType="cn.bx.system.entity.Dict">
		select <include refid="dictColumns"/>
		from sys_dict a
		where a.type = #{type} order by sort
	</select>
	<select id="list" resultType="cn.bx.system.entity.Dict">
		select <include refid="dictColumns"/>
		from sys_dict a
	</select>
	<insert id="add">
		insert into sys_dict(id, value, name, type, type_desc, sort, create_by, create_date, update_by, 
		update_date, remarks) 
		values (#{id}, #{value},#{name},#{type},#{typeDesc},#{sort}, #{createBy}, #{createDate},#{updateBy},
		#{updateDate}, #{remarks})
	</insert>
	<update id="save">
		update sys_dict set value = #{value}, name=#{name},type=#{type},type_desc=#{typeDesc},
		sort=#{sort},update_by=#{updateBy},update_date=#{updateDate},remarks = #{remarks}
		where id = #{id}
	</update>
	
	<delete id="delete">
		delete from  sys_dict where id in
		<foreach collection="array" item="id" open="(" close=")" separator=",">#{id}</foreach>
	</delete>
</mapper>